package views;

import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LLira
 * @author llira34 - GitHub
 */
public class ViewMain extends javax.swing.JFrame {

    double[][] matrix = null;
    int res = 0, var = 0, iter = 0, iteration = 0;
    Object array[] = null;
    Object labelX[] = null, labelY[] = null;

    //Table
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel modelSolution = new DefaultTableModel();

    /**
     * Creates new form ViewMain
     */
    public ViewMain() {
        initComponents();
        this.setLocationRelativeTo(this);
        this.setTitle("Método Simplex");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtVar = new javax.swing.JTextField();
        txtRes = new javax.swing.JTextField();
        btnCalculate = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnSolution = new javax.swing.JButton();
        btnInteraction = new javax.swing.JButton();
        txtInteraction = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSimplex = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1000, 500));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 100));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de entrada"));
        jPanel3.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setText("Número de variables:");
        jLabel1.setPreferredSize(new java.awt.Dimension(150, 30));

        jLabel2.setText("Número de restricciones:");
        jLabel2.setPreferredSize(new java.awt.Dimension(150, 30));

        txtVar.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtVar.setPreferredSize(new java.awt.Dimension(70, 30));

        txtRes.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtRes.setPreferredSize(new java.awt.Dimension(70, 30));

        btnCalculate.setText("Aceptar");
        btnCalculate.setPreferredSize(new java.awt.Dimension(90, 30));
        btnCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCalculateActionPerformed(evt);
            }
        });

        jButton4.setText("Cancelar");
        jButton4.setPreferredSize(new java.awt.Dimension(90, 30));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtVar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtRes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Resultados"));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        btnSolution.setText("Solución");
        btnSolution.setPreferredSize(new java.awt.Dimension(90, 30));
        btnSolution.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSolutionActionPerformed(evt);
            }
        });
        jPanel5.add(btnSolution);

        btnInteraction.setText("Interacción");
        btnInteraction.setPreferredSize(new java.awt.Dimension(90, 30));
        btnInteraction.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInteractionActionPerformed(evt);
            }
        });
        jPanel5.add(btnInteraction);

        txtInteraction.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtInteraction.setEnabled(false);
        txtInteraction.setPreferredSize(new java.awt.Dimension(90, 30));
        jPanel5.add(txtInteraction);

        tblSimplex.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 153)));
        tblSimplex.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "                X1", "                X2", "                X3", "                X4"
            }
        ));
        jScrollPane1.setViewportView(tblSimplex);

        tblData.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 0, 153)));
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "                 S1", "                 S2", "                 S3", "                 S4"
            }
        ));
        jScrollPane2.setViewportView(tblData);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, 0, 660, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCalculateActionPerformed
        // TODO add your handling code here:
        try {
            res = Integer.parseInt(txtRes.getText());
            var = Integer.parseInt(txtVar.getText());

            model.setRowCount(res + 1);
            model.setColumnCount(var + res + 2);
            array = new Object[var + res + 2];
            labelX = new Object[var + res];
            for (int i = 1; i < array.length - 1; i++) {
                if (i < var + 1) {
                    array[i] = "X" + i;
                    labelX[i - 1] = "X" + i;
                } else {
                    array[i] = "S" + (i - var);
                    labelX[i - 1] = "S" + (i - var);
                }
            }
            //---------------------
            labelY = new Object[res + 1];
            for (int i = 0; i < res; i++) {
                model.setValueAt("R" + (i + 1), i, 0);
                labelY[i] = "R" + (i + 1);
            }
            model.setValueAt("Z", res, 0);
            labelY[res] = "Z";
            //----------------------
            array[array.length - 1] = "Resultado";
            model.setColumnIdentifiers(array);
            tblSimplex.setModel(model);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getClass());
        }
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnSolutionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSolutionActionPerformed
        // TODO add your handling code here:
        try {
            matrix = new double[res + 1][res + var + 1];
            for (int i = 0; i < (res + 1); i++) {
                for (int j = 0; j < (res + var + 1); j++) {
                    matrix[i][j] = Double.parseDouble(tblSimplex.getValueAt(i, j + 1).toString());
                }
            }
            while (checkResult() != true) {
                labelY[rowPivot()] = labelX[columnPivot()];
                newTable(rowPivot(), columnPivot());
                modelSolution.setColumnCount(res + var + 2);
                modelSolution.setRowCount(res + 1);
                //--------------------------
                modelSolution.setColumnIdentifiers(array);
                //---------------------------
                for (int i = 0; i < (res + 1); i++) {
                    modelSolution.setValueAt(labelY[i], i, 0);
                    for (int j = 0; j < (res + var + 1); j++) {
                        modelSolution.setValueAt(matrix[i][j], i, j + 1);
                    }
                }
                tblData.setModel(modelSolution);
                iteration++;
            }
            btnSolution.setEnabled(false);
            btnInteraction.setEnabled(true);
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getClass());
        }
    }//GEN-LAST:event_btnSolutionActionPerformed

    private void btnInteractionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInteractionActionPerformed
        // TODO add your handling code here:
        try {
            matrix = new double[res + 1][res + var + 1];
            for (int i = 0; i < (res + 1); i++) {
                for (int j = 0; j < (res + var + 1); j++) {
                    matrix[i][j] = Double.parseDouble(tblSimplex.getValueAt(i, j + 1).toString());
                }
            }
            int k = 0;
            iter++;
            if (iter <= iteration) {
                txtInteraction.setText(": " + iter);
                while (iter > k) {
                    labelY[rowPivot()] = labelX[columnPivot()];
                    newTable(rowPivot(), columnPivot());
                    modelSolution.setColumnCount(res + var + 2);
                    modelSolution.setRowCount(res + 1);
                    //--------------------------
                    modelSolution.setColumnIdentifiers(array);
                    //---------------------------
                    for (int i = 0; i < (res + 1); i++) {
                        modelSolution.setValueAt(labelY[i], i, 0);
                        for (int j = 0; j < (res + var + 1); j++) {
                            modelSolution.setValueAt(matrix[i][j], i, j + 1);
                        }
                    }
                    tblData.setModel(modelSolution);
                    k++;
                }
            } else {
                iter = 0;
                iteration = 0;
                txtInteraction.setText("Final");
                btnSolution.setEnabled(true);
                btnInteraction.setEnabled(false);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
            System.out.println(e.getClass());
        }
    }//GEN-LAST:event_btnInteractionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnInteraction;
    private javax.swing.JButton btnSolution;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblSimplex;
    private javax.swing.JTextField txtInteraction;
    private javax.swing.JTextField txtRes;
    private javax.swing.JTextField txtVar;
    // End of variables declaration//GEN-END:variables

    public int columnPivot() {
        int pos = 0;
        double aux = matrix[res][0];
        for (int i = 1; i < res + var; i++) {
            if (aux > matrix[res][i]) {
                aux = matrix[res][i];
                pos = i;
            }
        }
        return pos;
    }

    public int rowPivot() {
        int column = columnPivot();
        double temp = 0, razon = matrix[0][var + res] / matrix[0][column];
        int pos = 0;
        for (int i = 1; i < res; i++) {
            if (matrix[i][column] != 0) {
                temp = matrix[i][var + res] / matrix[i][column];
                if (razon > temp && temp >= 0) {
                    razon = temp;
                    pos = i;
                }
            }
        }
        return pos;
    }

    public void newTable(int row, int col) {
        double pivot = matrix[row][col], temp = 0;//--
        for (int i = 0; i < res + var + 1; i++) {
            matrix[row][i] = matrix[row][i] / pivot;
        }
        for (int i = 0; i < res + 1; i++) {
            temp = matrix[i][col];
            for (int j = 0; j < var + res + 1; j++) {
                if (i != row) {
                    matrix[i][j] = matrix[i][j] - temp * matrix[row][j];
                } else {
                    break;
                }
            }
        }
    }

    public boolean checkResult() {
        boolean result = true;
        for (int i = 0; i < res + var; i++) {
            if (matrix[res][i] < 0) {
                result = false;
                break;
            }
        }
        return result;
    }
}
